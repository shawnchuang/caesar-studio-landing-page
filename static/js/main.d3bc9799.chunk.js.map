{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","name","email","data","setData","submitInfo","e","a","preventDefault","doc","GoogleSpreadsheet","process","REACT_APP_GSHEET_ID","useServiceAccountAuth","client_email","REACT_APP_CLIENT_EMAIL","private_key","REACT_APP_PRIVATE_KEY","loadInfo","sheet","sheetsByIndex","console","log","row","addRow","error","handleChange","target","value","className","type","onChange","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ikBAAe,I,uBCsEAA,MAjEf,WAEE,MAAwBC,mBAAS,CAC/BC,KAAK,GACLC,MAAM,KAFR,mBAAOC,EAAP,KAAaC,EAAb,KAKIC,EAAU,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,sEAEbD,EAAEE,iBAEIC,EAAM,IAAIC,oBAAkBC,8JAAYC,qBAJjC,SAMPH,EAAII,sBAAsB,CAC9BC,aAAcH,8JAAYI,uBAC1BC,YAAaL,8JAAYM,wBARd,uBAWPR,EAAIS,WAXG,cAaPC,EAAQV,EAAIW,cAAc,GAEhCC,QAAQC,IAAInB,EAAKF,MACjBoB,QAAQC,IAAInB,EAAKD,OACbqB,EAAM,CACRtB,KAAME,EAAKF,KACXC,MAAOC,EAAKD,OAnBD,UAqBQiB,EAAMK,OAAOD,GArBrB,iEAuBbF,QAAQI,MAAM,yBAAd,MAvBa,0DAAH,sDA2BRC,EAAe,SAACpB,GACpBF,EAAQ,2BACHD,GADE,kBACKG,EAAEqB,OAAO1B,KAAQK,EAAEqB,OAAOC,SAEtCP,QAAQC,IAAInB,EAAKF,OAEnB,OACE,qBAAK4B,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,iCACE,gCACE,mDAGA,uBAAOC,KAAK,OAAO7B,KAAK,OAAO2B,MAAOzB,EAAKF,KAAM8B,SAAUL,OAE7D,gCACE,6CAGA,uBAAOI,KAAK,OAAO7B,KAAK,QAAQ2B,MAAOzB,EAAKD,MAAO6B,SAAUL,OAE/D,8BACE,wBAAQM,QAAS3B,EAAjB,oCClDG4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.d3bc9799.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\nimport { useState } from 'react';\n\nfunction App() {\n\n  const [data, setData] = useState({\n    name:'',\n    email:'',\n  })\n  \n  let submitInfo = async (e) => {\n    try{\n      e.preventDefault();\n  \n      const doc = new GoogleSpreadsheet(process.env.REACT_APP_GSHEET_ID);\n  \n      await doc.useServiceAccountAuth({\n        client_email: process.env.REACT_APP_CLIENT_EMAIL,\n        private_key: process.env.REACT_APP_PRIVATE_KEY,\n      });\n    \n      await doc.loadInfo();\n    \n      const sheet = doc.sheetsByIndex[0];\n    \n      console.log(data.name);\n      console.log(data.email);\n      let row = {\n        name: data.name,\n        email: data.email\n      }\n      const result = await sheet.addRow(row);\n    }catch(e){\n      console.error('Google sheet API Error', e);\n    }\n  };\n\n  const handleChange = (e) => {\n    setData({\n      ...data, [e.target.name] : e.target.value\n    })\n    console.log(data.name);\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <form>\n          <div>\n            <label>\n              姓名 : \n            </label>\n            <input type='text' name='name' value={data.name} onChange={handleChange}/>\n          </div>\n          <div>\n            <label>\n              e-mail : \n            </label>\n            <input type='text' name='email' value={data.email} onChange={handleChange}/>\n          </div>\n          <div>\n            <button onClick={submitInfo}>送出</button>\n          </div>\n        </form>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}