{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","name","email","data","setData","submitInfo","e","a","preventDefault","doc","GoogleSpreadsheet","process","useServiceAccountAuth","client_email","private_key","loadInfo","sheet","sheetsByIndex","row","addRow","console","error","handleChange","target","value","className","type","onChange","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ikBAAe,I,uBCmEAA,MA9Df,WAEE,MAAwBC,mBAAS,CAC/BC,KAAK,GACLC,MAAM,KAFR,mBAAOC,EAAP,KAAaC,EAAb,KAKIC,EAAU,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,sEAEbD,EAAEE,iBAEIC,EAAM,IAAIC,oBAAkBC,gDAJrB,SAMPF,EAAIG,sBAAsB,CAC9BC,aAAcF,mEACdG,YAAaH,ysDARF,uBAWPF,EAAIM,WAXG,cAaPC,EAAQP,EAAIQ,cAAc,GAE5BC,EAAM,CACRjB,KAAME,EAAKF,KACXC,MAAOC,EAAKD,OAjBD,UAmBQc,EAAMG,OAAOD,GAnBrB,iEAqBbE,QAAQC,MAAM,yBAAd,MArBa,0DAAH,sDAyBRC,EAAe,SAAChB,GACpBF,EAAQ,2BACHD,GADE,kBACKG,EAAEiB,OAAOtB,KAAQK,EAAEiB,OAAOC,UAGxC,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,iCACE,gCACE,mDAGA,uBAAOC,KAAK,OAAOzB,KAAK,OAAOuB,MAAOrB,EAAKF,KAAM0B,SAAUL,OAE7D,gCACE,6CAGA,uBAAOI,KAAK,OAAOzB,KAAK,QAAQuB,MAAOrB,EAAKD,MAAOyB,SAAUL,OAE/D,8BACE,wBAAQM,QAASvB,EAAjB,oCC/CGwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3167a3ba.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport { useState } from 'react';\r\n\r\nfunction App() {\r\n\r\n  const [data, setData] = useState({\r\n    name:'',\r\n    email:'',\r\n  })\r\n  \r\n  let submitInfo = async (e) => {\r\n    try{\r\n      e.preventDefault();\r\n  \r\n      const doc = new GoogleSpreadsheet(process.env.REACT_APP_GSHEET_ID);\r\n  \r\n      await doc.useServiceAccountAuth({\r\n        client_email: process.env.REACT_APP_CLIENT_EMAIL,\r\n        private_key: process.env.REACT_APP_PRIVATE_KEY,\r\n      });\r\n    \r\n      await doc.loadInfo();\r\n    \r\n      const sheet = doc.sheetsByIndex[0];\r\n    \r\n      let row = {\r\n        name: data.name,\r\n        email: data.email\r\n      }\r\n      const result = await sheet.addRow(row);\r\n    }catch(e){\r\n      console.error('Google sheet API Error', e);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setData({\r\n      ...data, [e.target.name] : e.target.value\r\n    })\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <form>\r\n          <div>\r\n            <label>\r\n              姓名 : \r\n            </label>\r\n            <input type='text' name='name' value={data.name} onChange={handleChange}/>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              e-mail : \r\n            </label>\r\n            <input type='text' name='email' value={data.email} onChange={handleChange}/>\r\n          </div>\r\n          <div>\r\n            <button onClick={submitInfo}>送出</button>\r\n          </div>\r\n        </form>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}